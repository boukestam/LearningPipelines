# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'faf12235-e8b3-4f07-806a-5e319ba7bf6c'
  
  # Web app name
  webAppName: 'pocahontas'

  # Agent VM image name
  vmImageName: 'bouke-pc'

  Region: 'WestEurope'
  ResourceGroup: 'pocahontas'
  SKUAppService: 'F1'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      name: $(vmImageName)
      
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(System.DefaultWorkingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

- stage: Infrastructure
  displayName: Infrastructure stage
  jobs:
  - job: Infrastructure
    displayName: Infrastructure deploy to Azure
    pool:
      name: $(vmImageName)
    
    steps:
    - task: AzureCLI@1
      displayName: Infrastructure deploy
      inputs:
        azureSubscription: 'Microsoft Partner Network (638d2576-7c45-4f61-8b1a-271ffb5f599d)-2078'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Resource group
          az group create  --name $(ResourceGroup)  --location $(Region)

          # Web plan
          az appservice plan create -n $(ResourceGroup)-plan -g $(ResourceGroup) -l $(Region) --sku $(SKUAppService) --is-linux

          # App service
          az webapp create -n $(ResourceGroup) -g $(ResourceGroup) -p $(ResourceGroup)-plan --runtime "node|10.14"
          az webapp update -n $(ResourceGroup) -g $(ResourceGroup) --https-only true

- stage: Release
  displayName: Release stage
  jobs:
  - job: Release
    displayName: Release to Azure
    pool:
      name: $(vmImageName)
    
    steps:
    - task: AzureRmWebAppDeployment@4
      displayName: 'Azure App Service Deploy: pocahontas'
      inputs:
        azureSubscription: 'Microsoft Partner Network (638d2576-7c45-4f61-8b1a-271ffb5f599d)-2078'
        appType: webAppLinux
        WebAppName: pocahontas
        RuntimeStack: 'NODE|10.14'
        packageForLinux: '$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip'
        StartupCommand: 'node server.js'
